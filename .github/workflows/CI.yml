name: CI

on:
  push:
    branches:
      - main
    tags: '*'

  pull_request:
    branches:
      - main

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  build:
    name: Python ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        arch: [x64]
        #python-version: ["3.7"]
        #os: [ubuntu-latest, windows-latest, macOS-latest]
        #arch: [x64, x86]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

        exclude:
          - os: macOS-latest
            arch: x86

    runs-on: ${{ matrix.os }}

    env:
        codecov-arch: x64
        codecov-version: '1.7'

    steps:

      # --- Check out code and setup Python

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # --- Install Poetry

      - name: Load cached $HOME/.local
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ hashFiles('.github/workflows/CI.yml') }}

      - name: Install Python poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # --- Install package dependencies

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/CI.yml') }}

      - name: Install package dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      # --- Run tests

      - name: Run tests
        run: |
          source .venv/bin/activate
          poetry run pytest src/ tests/
          #tox -e py

#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

#      - name: Test with pytest
#        run: |
#          pytest

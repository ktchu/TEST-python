name: CI

on:
  push:
    branches:
      - main
    tags: '*'

  pull_request:
    branches:
      - main

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  run-tests:
    name: Python ${{ matrix.python-version }} (${{ matrix.os }}, ${{ matrix.arch }})

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        arch: [x64, x86]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

        exclude:
          - os: macOS-latest
            arch: x86
          - os: windows-latest
            python-version: "3.7"
          - os: windows-latest
            python-version: "3.8"

    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}

    env:
        codecov-arch: x64
        codecov-version: "3.10"

    steps:

      # --- Check out code and setup Python

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # --- Install Poetry

      - name: Load cached $HOME/.local
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ hashFiles('.github/workflows/CI.yml') }}

      - name: Install Python poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # --- Install package dependencies

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install package dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install

      # --- Run tests

      - name: Run tests
        run: |
          source $VENV
          poetry run pytest --cov-report=xml

      # --- Upload coverage statistics to codecov.io

      - name: Upload code coverage data to codecov.io
        # Only run for 'main' branch running on 'Linux' with the latest version of Julia
        if: |
            github.ref_name == 'main' &&
            runner.os == 'Linux' &&
            matrix.arch == env.codecov-arch &&
            matrix.python-version == env.codecov-version

        uses: codecov/codecov-action@v3
        with:
          # token: ${{ secrets.CODECOV_TOKEN }}  # Only required for private repositories
          file: ./coverage.xml
          fail_ci_if_error: true


  build-docs:
    name: Build Documentation

    runs-on: ubuntu-latest

    steps:
      # --- Check out code and setup Python

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # --- Install Poetry

      - name: Load cached $HOME/.local
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ hashFiles('.github/workflows/CI.yml') }}

      - name: Install Python poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # --- Install package dependencies

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-docs-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install package dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --only docs

      # --- Build and deploy documentation

      - name: Build documentation
        run: poetry run make docs

      - name: Deploy documentation
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs/python_test
